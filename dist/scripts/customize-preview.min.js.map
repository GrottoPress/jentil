{"version":3,"sources":["../../assets/scripts/customize-preview/base.ts","../../assets/scripts/customize-preview/colophon.ts","../../assets/scripts/customize-preview/page-layout.ts","../../assets/scripts/customize-preview/page-title.ts","../../assets/scripts/customize-preview/related-posts-heading.ts","../../assets/scripts/customize-preview.ts"],"names":["Base","_j","_wp","_mod_ids","this","prototype","run","update","replaceShortTags","tags","content","each","tag","replace","split","join","Colophon","_super","j","wp","mod_id","_short_tags","_this","call","__extends","customize","from","bind","to","html","PageLayout","_","id","updateBodyClass","attr","klass","addClass","length","PageTitle","mod_ids","RelatedPostsHeading","previews","jQuery","jentilColophonModId","jentilShortTags","jentilPageLayoutModIds","jentilPageTitleModIds","jentilRelatedPostsHeadingModIds","preview"],"mappings":";;;;;;;;;;;;;;;;;;;OAQA,IAAAA,EAAA,WAEI,SAAAA,EACuBC,EACAC,EACAC,GAFAC,KAAAH,GAAAA,EACAG,KAAAF,IAAAA,EACAE,KAAAD,SAAAA,EAmB3B,OAfIH,EAAAK,UAAAC,IAAA,WAEIF,KAAKG,UAKCP,EAAAK,UAAAG,iBAAV,SAA2BC,EAAcC,GAMrC,OAJAN,KAAKH,GAAGU,KAAKF,EAAM,SAACG,EAAaC,GAC7BH,EAAUA,EAAQI,MAAMF,GAAKG,KAAKF,KAG/BH,GAEfV,EAxBA,GCJAgB,EAAA,SAAAC,GAEI,SAAAD,EACIE,EACAC,EACAC,EACiBC,GAJrB,IAAAC,EAMIL,EAAAM,KAAAnB,KAAMc,EAAGC,EAAI,CAACC,KAAQhB,YAFLkB,EAAAD,YAAAA,IAiBzB,OAvB8BG,EAAAR,EAAAC,GAWhBD,EAAAX,UAAAE,OAAV,WAAA,IAAAe,EAAAlB,KAEIA,KAAKF,IAAIuB,UAAUrB,KAAKD,SAAS,GAAI,SAACuB,GAC9BA,EAAKC,KAAK,SAACC,GACPN,EAAKrB,GAAG,mBAAmB4B,KAAKP,EAAKd,iBACjCc,EAAKD,YACLO,SAMxBZ,EAvBA,CAA8BhB,GCA9B8B,EAAA,SAAAb,GAAA,SAAAa,mDAsBA,OAtBgCN,EAAAM,EAAAb,GAElBa,EAAAzB,UAAAE,OAAV,WAAA,IAAAe,EAAAlB,KAEIA,KAAKH,GAAGU,KAAKP,KAAKD,SAAU,SAAC4B,EAAGC,GAC5BV,EAAKpB,IAAIuB,UAAUO,EAAI,SAACN,GACpBA,EAAKC,KAAK,SAACC,GACPN,EAAKW,gBAAgBL,UAM7BE,EAAAzB,UAAA4B,gBAAR,SAAwBL,GAEpBxB,KAAKH,GAAG,QACHiC,KAAK,QAAS,SAACH,EAAGI,GAA0B,OAAAA,EAAMtB,QAC/C,qBACA,MAEHuB,SAAS,UAAUR,EAAE,mBAAmBA,EAAGd,MAAM,KAAKuB,SAEnEP,EAtBA,CAAgC9B,GCAhCsC,EAAA,SAAArB,GAEI,SAAAqB,EACIpB,EACAC,EACAoB,EACiBlB,GAJrB,IAAAC,EAMIL,EAAAM,KAAAnB,KAAMc,EAAGC,EAAIoB,IAAQnC,YAFJkB,EAAAD,YAAAA,IAkBzB,OAxB+BG,EAAAc,EAAArB,GAWjBqB,EAAAjC,UAAAE,OAAV,WAAA,IAAAe,EAAAlB,KAEIA,KAAKH,GAAGU,KAAKP,KAAKD,SAAU,SAAC4B,EAAGC,GAC5BV,EAAKpB,IAAIuB,UAAUO,EAAI,SAACN,GACpBA,EAAKC,KAAK,SAACC,GACPN,EAAKrB,GAAG,eAAe4B,KAAKP,EAAKd,iBAC7Bc,EAAKD,YACLO,WAMxBU,EAxBA,CAA+BtC,GCA/BwC,EAAA,SAAAvB,GAAA,SAAAuB,mDAYA,OAZyChB,EAAAgB,EAAAvB,GAE3BuB,EAAAnC,UAAAE,OAAV,WAAA,IAAAe,EAAAlB,KAEIA,KAAKH,GAAGU,KAAKP,KAAKD,SAAU,SAAC4B,EAAGC,GAC5BV,EAAKpB,IAAIuB,UAAUO,EAAI,SAACN,GACpBA,EAAKC,KAAK,SAACC,GACPN,EAAKrB,GAAG,sCAAsC4B,KAAKD,UAKvEY,EAZA,CAAyCxC,GCKnCyC,EAAW,CACb,IAAIzB,EAAS0B,OAAQvB,GAAIwB,oBAAqBC,iBAC9C,IAAId,EAAWY,OAAQvB,GAAI0B,wBAC3B,IAAIP,EAAUI,OAAQvB,GAAI2B,sBAAuBF,iBACjD,IAAIJ,EAAoBE,OAAQvB,GAAI4B,kCAGxCL,OAAO/B,KAAK8B,EAAU,SAACV,EAAGiB,GAAwB,OAAAA,EAAQ1C","file":"customize-preview.min.js","sourcesContent":["/*!\n * Jentil (c) 2017-present GrottoPress\n * License: https://opensource.org/licenses/MIT\n * Home: https://www.grottopress.com/jentil/\n */\n\n/// <reference path='./module.d.ts' />\n\nexport abstract class Base\n{\n    constructor(\n        protected readonly _j: JQueryStatic,\n        protected readonly _wp: WP,\n        protected readonly _mod_ids: string[],\n    ) {\n    }\n\n    run(): void\n    {\n        this.update()\n    }\n\n    protected abstract update(): void\n\n    protected replaceShortTags(tags: object, content: string): string\n    {\n        this._j.each(tags, (tag: string, replace: string): void => {\n            content = content.split(tag).join(replace)\n        })\n\n        return content\n    }\n}\n","/// <reference path='./module.d.ts' />\n\nimport { Base } from './base'\n\nexport class Colophon extends Base\n{\n    constructor(\n        j: JQueryStatic,\n        wp: WP,\n        mod_id: string,\n        private readonly _short_tags: object,\n    ) {\n        super(j, wp, [mod_id])\n    }\n\n    protected update(): void\n    {\n        this._wp.customize(this._mod_ids[0], (from: () => void): void => {\n                from.bind((to: string): void => {\n                    this._j('#colophon small').html(this.replaceShortTags(\n                        this._short_tags,\n                        to\n                    ))\n                })\n            }\n        )\n    }\n}\n","/// <reference path='./module.d.ts' />\n\nimport { Base } from './base'\n\nexport class PageLayout extends Base\n{\n    protected update(): void\n    {\n        this._j.each(this._mod_ids, (_, id: string): void => {\n            this._wp.customize(id, (from: () => void): void => {\n                from.bind((to: string): void => {\n                    this.updateBodyClass(to)\n                })\n            })\n        })\n    }\n\n    private updateBodyClass(to: string)\n    {\n        this._j('body')\n            .attr('class', (_, klass: string): string => klass.replace(\n                /(^|\\s)layout\\-\\S+/g,\n                ''\n            ))\n            .addClass(`layout-${to} layout-columns-${to.split('-').length}`)\n    }\n}\n","/// <reference path='./module.d.ts' />\n\nimport { Base } from './base'\n\nexport class PageTitle extends Base\n{\n    constructor(\n        j: JQueryStatic,\n        wp: WP,\n        mod_ids: string[],\n        private readonly _short_tags: object,\n    ) {\n        super(j, wp, mod_ids)\n    }\n\n    protected update(): void\n    {\n        this._j.each(this._mod_ids, (_, id: string): void => {\n            this._wp.customize(id, (from: () => void): void => {\n                from.bind((to: string): void => {\n                    this._j('.page-title').html(this.replaceShortTags(\n                        this._short_tags,\n                        to\n                    ))\n                })\n            })\n        })\n    }\n}\n","/// <reference path='./module.d.ts' />\n\nimport { Base } from './base'\n\nexport class RelatedPostsHeading extends Base\n{\n    protected update(): void\n    {\n        this._j.each(this._mod_ids, (_, id: string): void => {\n            this._wp.customize(id, (from: () => void): void => {\n                from.bind((to: string): void => {\n                    this._j('#related-posts-wrap .posts-heading').html(to)\n                })\n            })\n        })\n    }\n}\n","/// <reference path='./customize-preview/module.d.ts' />\n\nimport { Base } from './customize-preview/base'\n\nimport { Colophon } from './customize-preview/colophon'\nimport { PageLayout } from './customize-preview/page-layout'\nimport { PageTitle } from './customize-preview/page-title'\nimport { RelatedPostsHeading } from './customize-preview/related-posts-heading'\n\nconst previews = [\n    new Colophon(jQuery, wp, jentilColophonModId, jentilShortTags),\n    new PageLayout(jQuery, wp, jentilPageLayoutModIds),\n    new PageTitle(jQuery, wp, jentilPageTitleModIds, jentilShortTags),\n    new RelatedPostsHeading(jQuery, wp, jentilRelatedPostsHeadingModIds)\n]\n\njQuery.each(previews, (_, preview: Base): void => preview.run())\n"]}