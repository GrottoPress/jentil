{"version":3,"sources":["../../assets/scripts/customize-preview.ts"],"names":["Jentil","Customizer","_j","_wp","_shortTags","_colophonModId","_pageLayoutModId","_pageTitleModId","_relPostsHdModId","this","prototype","run","updateColophon","updatePageTitle","updateRelatedPostsHeading","updatePageLayout","_this","customize","from","bind","to","html","replaceShortTags","each","_","id","attr","klass","replace","addClass","split","length","content","tag","join","jQuery","wp","jentilShortTags","jentilColophonModId","jentilPageLayoutModIds","jentilPageTitleModIds","jentilRelatedPostsHeadingModIds"],"mappings":"AAEA,IAAUA,QAAV,SAAUA,GAEN,IAAAC,EAAA,WAEI,SAAAA,EACqBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GANAC,KAAAP,GAAAA,EACAO,KAAAN,IAAAA,EACAM,KAAAL,WAAAA,EACAK,KAAAJ,eAAAA,EACAI,KAAAH,iBAAAA,EACAG,KAAAF,gBAAAA,EACAE,KAAAD,iBAAAA,EA8EzB,OA1EWP,EAAAS,UAAAC,IAAP,WAEIF,KAAKG,iBACLH,KAAKI,kBACLJ,KAAKK,4BACLL,KAAKM,oBAGDd,EAAAS,UAAAE,eAAR,WAAA,IAAAI,EAAAP,KAEIA,KAAKN,IAAIc,UACLR,KAAKJ,eACL,SAACa,GACGA,EAAKC,KAAK,SAACC,GACPJ,EAAKd,GAAG,mBACHmB,KAAKL,EAAKM,iBAAiBF,SAMxCnB,EAAAS,UAAAG,gBAAR,WAAA,IAAAG,EAAAP,KAEIA,KAAKP,GAAGqB,KAAKd,KAAKF,gBAAiB,SAACiB,EAAGC,GACnCT,EAAKb,IAAIc,UAAUQ,EAAI,SAACP,GACpBA,EAAKC,KAAK,SAACC,GACPJ,EAAKd,GAAG,eAAemB,KAAKL,EAAKM,iBAAiBF,WAM1DnB,EAAAS,UAAAI,0BAAR,WAAA,IAAAE,EAAAP,KAEIA,KAAKP,GAAGqB,KAAKd,KAAKD,iBAAkB,SAACgB,EAAGC,GACpCT,EAAKb,IAAIc,UAAUQ,EAAI,SAACP,GACpBA,EAAKC,KAAK,SAACC,GACPJ,EAAKd,GAAG,sCAAsCmB,KAAKD,UAM3DnB,EAAAS,UAAAK,iBAAR,WAAA,IAAAC,EAAAP,KAEIA,KAAKP,GAAGqB,KACJd,KAAKH,iBAAkB,SAACkB,EAAGC,GACvBT,EAAKb,IAAIc,UAAUQ,EAAI,SAACP,GACpBA,EAAKC,KAAK,SAACC,GACPJ,EAAKd,GAAG,QAAQwB,KACZ,QACA,SAACF,EAAGG,GAA0B,OAAAA,EAAMC,QAChC,qBACA,MAENC,SAAS,UAAUT,EAAE,mBAAmBA,EACrCU,MAAM,KAAKC,eAO5B9B,EAAAS,UAAAY,iBAAR,SAAyBU,GASrB,OAPAvB,KAAKP,GAAGqB,KACJd,KAAKL,WACL,SAAC6B,EAAaL,GACVI,EAAUA,EAAQF,MAAMG,GAAKC,KAAKN,KAInCI,GAEf/B,EAvFA,GAAaD,EAAAC,WAAUA,EAF3B,CAAUD,SAAAA,OAAM,KA4FhB,IAAIA,OAAOC,WACPkC,OACAC,GACAC,gBACAC,oBACAC,uBACAC,sBACAC,iCACF9B","file":"customize-preview.min.js","sourcesContent":["/// <reference path='./global.d.ts' />\n\nnamespace Jentil\n{\n    export class Customizer\n    {\n        public constructor(\n            private readonly _j: JQueryStatic,\n            private readonly _wp: WP,\n            private readonly _shortTags: object,\n            private readonly _colophonModId: string,\n            private readonly _pageLayoutModId: string[],\n            private readonly _pageTitleModId: string[],\n            private readonly _relPostsHdModId: string[],\n        ) {\n        }\n\n        public run(): void\n        {\n            this.updateColophon()\n            this.updatePageTitle()\n            this.updateRelatedPostsHeading()\n            this.updatePageLayout()\n        }\n\n        private updateColophon(): void\n        {\n            this._wp.customize(\n                this._colophonModId,\n                (from: () => void): void => {\n                    from.bind((to: string): void => {\n                        this._j('#colophon small')\n                            .html(this.replaceShortTags(to))\n                    })\n                }\n            )\n        }\n\n        private updatePageTitle(): void\n        {\n            this._j.each(this._pageTitleModId, (_, id: string): void => {\n                this._wp.customize(id, (from: () => void): void => {\n                    from.bind((to: string): void => {\n                        this._j('.page-title').html(this.replaceShortTags(to))\n                    })\n                })\n            })\n        }\n\n        private updateRelatedPostsHeading(): void\n        {\n            this._j.each(this._relPostsHdModId, (_, id: string): void => {\n                this._wp.customize(id, (from: () => void): void => {\n                    from.bind((to: string): void => {\n                        this._j('#related-posts-wrap .posts-heading').html(to)\n                    })\n                })\n            })\n        }\n\n        private updatePageLayout(): void\n        {\n            this._j.each(\n                this._pageLayoutModId, (_, id: string): void => {\n                    this._wp.customize(id, (from: () => void): void => {\n                        from.bind((to: string): void => {\n                            this._j('body').attr(\n                                'class',\n                                (_, klass: string): string => klass.replace(\n                                    /(^|\\s)layout\\-\\S+/g,\n                                    ''\n                                )\n                            ).addClass(`layout-${to} layout-columns-${to\n                                .split('-').length}`)\n                        })\n                    })\n                }\n            )\n        }\n\n        private replaceShortTags(content: string): string\n        {\n            this._j.each(\n                this._shortTags,\n                (tag: string, replace: string): void => {\n                    content = content.split(tag).join(replace)\n                }\n            )\n\n            return content\n        }\n    }\n}\n\nnew Jentil.Customizer(\n    jQuery,\n    wp,\n    jentilShortTags,\n    jentilColophonModId,\n    jentilPageLayoutModIds,\n    jentilPageTitleModIds,\n    jentilRelatedPostsHeadingModIds\n).run()\n"]}