var Jentil;!function(t){var n=function(){function t(t,n){this._j=t,this._l10n=n,this._duration=200,this._subMenuButtonClassName="js-sub-menu-button",this._subMenuButtonSelector="."+this._subMenuButtonClassName}return t.prototype.run=function(){this.addIconToParentMenuItems(),this.hideSubMenus(),this.showSidebarCurrentMenuItem(),this.handleMenuButtonClick(),this.handleMenuLinkClick(),this.handleSubMenuButtonClick()},t.prototype.addIconToParentMenuItems=function(){this._j(".menu li > ul").before('<button class="'+this._subMenuButtonClassName+' sub-menu-toggle">\n                    '+this.renderCaret("down")+"\n                </button>")},t.prototype.hideSubMenus=function(){this._j(this._subMenuButtonSelector).next("ul").hide()},t.prototype.showSidebarCurrentMenuItem=function(){this._j(".site-sidebar li.current-menu-ancestor > ul").show().siblings(this._subMenuButtonSelector).html(""+this.renderCaret("up"))},t.prototype.handleMenuButtonClick=function(){var n=this;this._j(".js-main-menu-button").attr("href","#").on("click",function(t){n._j(".js-main-menu").slideToggle(n._duration,function(){n._j(".js-main-menu").toggleClass("show hide").css({display:""})}),t.preventDefault()})},t.prototype.handleMenuLinkClick=function(){var n=this;this._j(this._subMenuButtonSelector).prev("a").on("click",function(t){"#"===n._j(t.currentTarget).attr("href")&&(n.toggleSubMenu(n._j(t.currentTarget).next("button")),t.preventDefault())})},t.prototype.handleSubMenuButtonClick=function(){var n=this;this._j(this._subMenuButtonSelector).on("click",function(t){n.toggleSubMenu(t.currentTarget),t.preventDefault()})},t.prototype.toggleSubMenu=function(t,n){var e=this;void 0===n&&(n=function(t){e._j(t).slideToggle(e._duration)}),this._j(t).parent().siblings("li").children("ul").slideUp(this._duration),this._j(t).parent().siblings("li").children("button").html(this.renderCaret("down")),this.toggleCaret(t),n(this._j(t).next("ul"))},t.prototype.toggleCaret=function(t){"none"===this._j(t).next("ul").css("display")?this._j(t).html(this.renderCaret("up")):this._j(t).html(this.renderCaret("down"))},t.prototype.renderCaret=function(t){return'<span class="fas fa-caret-'+t+' fa-sm" aria-hidden="true"></span>\n            <span class="screen-reader-text">'+this._l10n.submenu+"</span>"},t}();t.Menu=n}(Jentil||(Jentil={})),new Jentil.Menu(jQuery,jentilMenuL10n).run();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2Fzc2V0cy9zY3JpcHRzL21lbnUudHMiXSwibmFtZXMiOlsiSmVudGlsIiwiTWVudSIsIl9qIiwiX2wxMG4iLCJ0aGlzIiwiX2R1cmF0aW9uIiwiX3N1Yk1lbnVCdXR0b25DbGFzc05hbWUiLCJfc3ViTWVudUJ1dHRvblNlbGVjdG9yIiwicHJvdG90eXBlIiwicnVuIiwiYWRkSWNvblRvUGFyZW50TWVudUl0ZW1zIiwiaGlkZVN1Yk1lbnVzIiwic2hvd1NpZGViYXJDdXJyZW50TWVudUl0ZW0iLCJoYW5kbGVNZW51QnV0dG9uQ2xpY2siLCJoYW5kbGVNZW51TGlua0NsaWNrIiwiaGFuZGxlU3ViTWVudUJ1dHRvbkNsaWNrIiwiYmVmb3JlIiwicmVuZGVyQ2FyZXQiLCJuZXh0IiwiaGlkZSIsInNob3ciLCJzaWJsaW5ncyIsImh0bWwiLCJfdGhpcyIsImF0dHIiLCJvbiIsImV2ZW50Iiwic2xpZGVUb2dnbGUiLCJ0b2dnbGVDbGFzcyIsImNzcyIsImRpc3BsYXkiLCJwcmV2ZW50RGVmYXVsdCIsInByZXYiLCJjdXJyZW50VGFyZ2V0IiwidG9nZ2xlU3ViTWVudSIsImJ1dHRvbiIsImVmZmVjdCIsInRhcmdldCIsInBhcmVudCIsImNoaWxkcmVuIiwic2xpZGVVcCIsInRvZ2dsZUNhcmV0IiwiZGlyZWN0aW9uIiwic3VibWVudSIsImpRdWVyeSIsImplbnRpbE1lbnVMMTBuIl0sIm1hcHBpbmdzIjoiQUFFQSxJQUFVQSxRQUFWLFNBQVVBLEdBRU4sSUFBQUMsRUFBQSxXQVFJLFNBQUFBLEVBQ3FCQyxFQUNBQyxHQURBQyxLQUFBRixHQUFBQSxFQUNBRSxLQUFBRCxNQUFBQSxFQVJKQyxLQUFBQyxVQUFvQixJQUNwQkQsS0FBQUUsd0JBQWtDLHFCQUVsQ0YsS0FBQUcsdUJBQ2IsSUFBSUgsS0FBS0Usd0JBMEhqQixPQWxIV0wsRUFBQU8sVUFBQUMsSUFBUCxXQUVJTCxLQUFLTSwyQkFDTE4sS0FBS08sZUFDTFAsS0FBS1EsNkJBRUxSLEtBQUtTLHdCQUNMVCxLQUFLVSxzQkFDTFYsS0FBS1csNEJBR0RkLEVBQUFPLFVBQUFFLHlCQUFSLFdBRUlOLEtBQUtGLEdBQUcsaUJBQWlCYyxPQUNyQixrQkFBa0JaLEtBQUtFLHdCQUF1QiwyQ0FDeENGLEtBQUthLFlBQVksUUFBTyxnQ0FLOUJoQixFQUFBTyxVQUFBRyxhQUFSLFdBRUlQLEtBQUtGLEdBQUdFLEtBQUtHLHdCQUF3QlcsS0FBSyxNQUFNQyxRQUc1Q2xCLEVBQUFPLFVBQUFJLDJCQUFSLFdBRUlSLEtBQUtGLEdBQUcsK0NBQStDa0IsT0FDbERDLFNBQVNqQixLQUFLRyx3QkFDZGUsS0FBSyxHQUFHbEIsS0FBS2EsWUFBWSxRQUcxQmhCLEVBQUFPLFVBQUFLLHNCQUFSLFdBQUEsSUFBQVUsRUFBQW5CLEtBRUlBLEtBQUtGLEdBQUcsd0JBQXdCc0IsS0FBSyxPQUFRLEtBQUtDLEdBQzlDLFFBQ0EsU0FBQ0MsR0FDR0gsRUFBS3JCLEdBQUcsaUJBQWlCeUIsWUFDckJKLEVBQUtsQixVQUNMLFdBQ0lrQixFQUFLckIsR0FBRyxpQkFBaUIwQixZQUFZLGFBQ2hDQyxJQUFJLENBQUNDLFFBQVMsT0FJM0JKLEVBQU1LLG9CQUtWOUIsRUFBQU8sVUFBQU0sb0JBQVIsV0FBQSxJQUFBUyxFQUFBbkIsS0FFSUEsS0FBS0YsR0FBR0UsS0FBS0csd0JBQXdCeUIsS0FBSyxLQUFLUCxHQUMzQyxRQUNBLFNBQUNDLEdBQ08sTUFBUUgsRUFBS3JCLEdBQUd3QixFQUFNTyxlQUFlVCxLQUFLLFVBQzFDRCxFQUFLVyxjQUFjWCxFQUFLckIsR0FBR3dCLEVBQU1PLGVBQzVCZixLQUFLLFdBRVZRLEVBQU1LLHFCQU1kOUIsRUFBQU8sVUFBQU8seUJBQVIsV0FBQSxJQUFBUSxFQUFBbkIsS0FFSUEsS0FBS0YsR0FBR0UsS0FBS0csd0JBQXdCa0IsR0FDakMsUUFDQSxTQUFDQyxHQUVESCxFQUFLVyxjQUFjUixFQUFNTyxlQUV6QlAsRUFBTUssb0JBSU45QixFQUFBTyxVQUFBMEIsY0FBUixTQUNJQyxFQUNBQyxHQUZKLElBQUFiLEVBQUFuQixVQUVJLElBQUFnQyxJQUFBQSxFQUFBLFNBQVVDLEdBS05kLEVBQUtyQixHQUFHbUMsR0FBUVYsWUFBWUosRUFBS2xCLGFBR3JDRCxLQUFLRixHQUFHaUMsR0FBUUcsU0FBU2pCLFNBQVMsTUFBTWtCLFNBQVMsTUFDNUNDLFFBQVFwQyxLQUFLQyxXQUNsQkQsS0FBS0YsR0FBR2lDLEdBQVFHLFNBQVNqQixTQUFTLE1BQU1rQixTQUFTLFVBQzVDakIsS0FBS2xCLEtBQUthLFlBQVksU0FFM0JiLEtBQUtxQyxZQUFZTixHQUVqQkMsRUFBT2hDLEtBQUtGLEdBQUdpQyxHQUFRakIsS0FBSyxRQUd4QmpCLEVBQUFPLFVBQUFpQyxZQUFSLFNBQW9CTixHQUtaLFNBQVcvQixLQUFLRixHQUFHaUMsR0FBUWpCLEtBQUssTUFBTVcsSUFBSSxXQUMxQ3pCLEtBQUtGLEdBQUdpQyxHQUFRYixLQUFLbEIsS0FBS2EsWUFBWSxPQUV0Q2IsS0FBS0YsR0FBR2lDLEdBQVFiLEtBQUtsQixLQUFLYSxZQUFZLFVBSXRDaEIsRUFBQU8sVUFBQVMsWUFBUixTQUFvQnlCLEdBRWhCLE1BQU8sNkJBQTZCQSxFQUFTLG9GQUNWdEMsS0FBS0QsTUFBTXdDLFFBQU8sV0FFN0QxQyxFQWhJQSxHQUFhRCxFQUFBQyxLQUFJQSxFQUZyQixDQUFVRCxTQUFBQSxPQUFNLEtBcUloQixJQUFJQSxPQUFPQyxLQUFLMkMsT0FBUUMsZ0JBQWdCcEMiLCJmaWxlIjoibWVudS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPScuL2dsb2JhbC5kLnRzJyAvPlxuXG5uYW1lc3BhY2UgSmVudGlsXG57XG4gICAgZXhwb3J0IGNsYXNzIE1lbnVcbiAgICB7XG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgX2R1cmF0aW9uOiBudW1iZXIgPSAyMDBcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBfc3ViTWVudUJ1dHRvbkNsYXNzTmFtZTogc3RyaW5nID0gJ2pzLXN1Yi1tZW51LWJ1dHRvbidcblxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IF9zdWJNZW51QnV0dG9uU2VsZWN0b3I6IHN0cmluZyA9XG4gICAgICAgICAgICBgLiR7dGhpcy5fc3ViTWVudUJ1dHRvbkNsYXNzTmFtZX1gXG5cbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKFxuICAgICAgICAgICAgcHJpdmF0ZSByZWFkb25seSBfajogSlF1ZXJ5U3RhdGljLFxuICAgICAgICAgICAgcHJpdmF0ZSByZWFkb25seSBfbDEwbjogSmVudGlsTWVudUwxMG5cbiAgICAgICAgKSB7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgcnVuKCk6IHZvaWRcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5hZGRJY29uVG9QYXJlbnRNZW51SXRlbXMoKVxuICAgICAgICAgICAgdGhpcy5oaWRlU3ViTWVudXMoKVxuICAgICAgICAgICAgdGhpcy5zaG93U2lkZWJhckN1cnJlbnRNZW51SXRlbSgpXG5cbiAgICAgICAgICAgIHRoaXMuaGFuZGxlTWVudUJ1dHRvbkNsaWNrKClcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlTWVudUxpbmtDbGljaygpXG4gICAgICAgICAgICB0aGlzLmhhbmRsZVN1Yk1lbnVCdXR0b25DbGljaygpXG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGFkZEljb25Ub1BhcmVudE1lbnVJdGVtcygpOiB2b2lkXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2ooJy5tZW51IGxpID4gdWwnKS5iZWZvcmUoXG4gICAgICAgICAgICAgICAgYDxidXR0b24gY2xhc3M9XCIke3RoaXMuX3N1Yk1lbnVCdXR0b25DbGFzc05hbWV9IHN1Yi1tZW51LXRvZ2dsZVwiPlxuICAgICAgICAgICAgICAgICAgICAke3RoaXMucmVuZGVyQ2FyZXQoJ2Rvd24nKX1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5gXG4gICAgICAgICAgICApXG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGhpZGVTdWJNZW51cygpOiB2b2lkXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2oodGhpcy5fc3ViTWVudUJ1dHRvblNlbGVjdG9yKS5uZXh0KCd1bCcpLmhpZGUoKVxuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBzaG93U2lkZWJhckN1cnJlbnRNZW51SXRlbSgpOiB2b2lkXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2ooJy5zaXRlLXNpZGViYXIgbGkuY3VycmVudC1tZW51LWFuY2VzdG9yID4gdWwnKS5zaG93KClcbiAgICAgICAgICAgICAgICAuc2libGluZ3ModGhpcy5fc3ViTWVudUJ1dHRvblNlbGVjdG9yKVxuICAgICAgICAgICAgICAgIC5odG1sKGAke3RoaXMucmVuZGVyQ2FyZXQoJ3VwJyl9YClcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgaGFuZGxlTWVudUJ1dHRvbkNsaWNrKCk6IHZvaWRcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5faignLmpzLW1haW4tbWVudS1idXR0b24nKS5hdHRyKCdocmVmJywgJyMnKS5vbihcbiAgICAgICAgICAgICAgICAnY2xpY2snLFxuICAgICAgICAgICAgICAgIChldmVudDogSlF1ZXJ5LkV2ZW50KTogdm9pZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2ooJy5qcy1tYWluLW1lbnUnKS5zbGlkZVRvZ2dsZShcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2R1cmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgKCk6IHZvaWQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2ooJy5qcy1tYWluLW1lbnUnKS50b2dnbGVDbGFzcygnc2hvdyBoaWRlJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNzcyh7ZGlzcGxheTogJyd9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICApXG5cbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgaGFuZGxlTWVudUxpbmtDbGljaygpOiB2b2lkXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2oodGhpcy5fc3ViTWVudUJ1dHRvblNlbGVjdG9yKS5wcmV2KCdhJykub24oXG4gICAgICAgICAgICAgICAgJ2NsaWNrJyxcbiAgICAgICAgICAgICAgICAoZXZlbnQ6IEpRdWVyeS5UcmlnZ2VyZWRFdmVudCk6IHZvaWQgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoJyMnID09PSB0aGlzLl9qKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmF0dHIoJ2hyZWYnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50b2dnbGVTdWJNZW51KHRoaXMuX2ooZXZlbnQuY3VycmVudFRhcmdldClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAubmV4dCgnYnV0dG9uJykpXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgaGFuZGxlU3ViTWVudUJ1dHRvbkNsaWNrKCk6IHZvaWRcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5faih0aGlzLl9zdWJNZW51QnV0dG9uU2VsZWN0b3IpLm9uKFxuICAgICAgICAgICAgICAgICdjbGljaycsXG4gICAgICAgICAgICAgICAgKGV2ZW50OiBKUXVlcnkuVHJpZ2dlcmVkRXZlbnRcbiAgICAgICAgICAgICk6IHZvaWQgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlU3ViTWVudShldmVudC5jdXJyZW50VGFyZ2V0KVxuXG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgdG9nZ2xlU3ViTWVudShcbiAgICAgICAgICAgIGJ1dHRvbjogSlF1ZXJ5PEV2ZW50VGFyZ2V0PiB8IEhUTUxFbGVtZW50IHwgRXZlbnRUYXJnZXQsXG4gICAgICAgICAgICBlZmZlY3QgPSAodGFyZ2V0OlxuICAgICAgICAgICAgICAgIEpRdWVyeTxFdmVudFRhcmdldCB8XG4gICAgICAgICAgICAgICAgSFRNTEVsZW1lbnQgfFxuICAgICAgICAgICAgICAgIEpRdWVyeTxFdmVudFRhcmdldD4+XG4gICAgICAgICAgICApOiB2b2lkID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9qKHRhcmdldCkuc2xpZGVUb2dnbGUodGhpcy5fZHVyYXRpb24pXG4gICAgICAgICAgICB9XG4gICAgICAgICk6IHZvaWQge1xuICAgICAgICAgICAgdGhpcy5faihidXR0b24pLnBhcmVudCgpLnNpYmxpbmdzKCdsaScpLmNoaWxkcmVuKCd1bCcpXG4gICAgICAgICAgICAgICAgLnNsaWRlVXAodGhpcy5fZHVyYXRpb24pXG4gICAgICAgICAgICB0aGlzLl9qKGJ1dHRvbikucGFyZW50KCkuc2libGluZ3MoJ2xpJykuY2hpbGRyZW4oJ2J1dHRvbicpXG4gICAgICAgICAgICAgICAgLmh0bWwodGhpcy5yZW5kZXJDYXJldCgnZG93bicpKVxuXG4gICAgICAgICAgICB0aGlzLnRvZ2dsZUNhcmV0KGJ1dHRvbilcblxuICAgICAgICAgICAgZWZmZWN0KHRoaXMuX2ooYnV0dG9uKS5uZXh0KCd1bCcpKVxuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSB0b2dnbGVDYXJldChidXR0b246XG4gICAgICAgICAgICBKUXVlcnk8RXZlbnRUYXJnZXQ+IHxcbiAgICAgICAgICAgIEhUTUxFbGVtZW50IHxcbiAgICAgICAgICAgIEV2ZW50VGFyZ2V0XG4gICAgICAgICk6IHZvaWQge1xuICAgICAgICAgICAgaWYgKCdub25lJyA9PT0gdGhpcy5faihidXR0b24pLm5leHQoJ3VsJykuY3NzKCdkaXNwbGF5JykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9qKGJ1dHRvbikuaHRtbCh0aGlzLnJlbmRlckNhcmV0KCd1cCcpKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9qKGJ1dHRvbikuaHRtbCh0aGlzLnJlbmRlckNhcmV0KCdkb3duJykpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIHJlbmRlckNhcmV0KGRpcmVjdGlvbjogJ3VwJyB8ICdkb3duJyk6IHN0cmluZ1xuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gYDxzcGFuIGNsYXNzPVwiZmFzIGZhLWNhcmV0LSR7ZGlyZWN0aW9ufSBmYS1zbVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwic2NyZWVuLXJlYWRlci10ZXh0XCI+JHt0aGlzLl9sMTBuLnN1Ym1lbnV9PC9zcGFuPmBcbiAgICAgICAgfVxuICAgIH1cbn1cblxubmV3IEplbnRpbC5NZW51KGpRdWVyeSwgamVudGlsTWVudUwxMG4pLnJ1bigpXG4iXX0=
