var Jentil;!function(t){var o=function(){function t(t,o,i,e,n,s,a){this._j=t,this._wp=o,this._shortTags=i,this._colophonModId=e,this._pageLayoutModId=n,this._pageTitleModId=s,this._relPostsHdModId=a}return t.prototype.run=function(){this.updateColophon(),this.updatePageTitle(),this.updateRelatedPostsHeading(),this.updatePageLayout()},t.prototype.updateColophon=function(){var o=this;this._wp.customize(this._colophonModId,function(t){t.bind(function(t){o._j("#colophon small").html(o.replaceShortTags(t))})})},t.prototype.updatePageTitle=function(){var i=this;this._j.each(this._pageTitleModId,function(t,o){i._wp.customize(o,function(t){t.bind(function(t){i._j(".page-title").html(i.replaceShortTags(t))})})})},t.prototype.updateRelatedPostsHeading=function(){var i=this;this._j.each(this._relPostsHdModId,function(t,o){i._wp.customize(o,function(t){t.bind(function(t){i._j("#related-posts-wrap .posts-heading").html(t)})})})},t.prototype.updatePageLayout=function(){var i=this;this._j.each(this._pageLayoutModId,function(t,o){i._wp.customize(o,function(t){t.bind(function(t){i._j("body").attr("class",function(t,o){return o.replace(/(^|\s)layout\-\S+/g,"")}).addClass("layout-"+t+" layout-columns-"+t.split("-").length)})})})},t.prototype.replaceShortTags=function(i){return this._j.each(this._shortTags,function(t,o){i=i.split(t).join(o)}),i},t}();t.Customizer=o}(Jentil||(Jentil={})),new Jentil.Customizer(jQuery,wp,jentilShortTags,jentilColophonModId,jentilPageLayoutModIds,jentilPageTitleModIds,jentilRelatedPostsHeadingModIds).run();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2Fzc2V0cy9zY3JpcHRzL2N1c3RvbWl6ZS1wcmV2aWV3LnRzIl0sIm5hbWVzIjpbIkplbnRpbCIsIkN1c3RvbWl6ZXIiLCJfaiIsIl93cCIsIl9zaG9ydFRhZ3MiLCJfY29sb3Bob25Nb2RJZCIsIl9wYWdlTGF5b3V0TW9kSWQiLCJfcGFnZVRpdGxlTW9kSWQiLCJfcmVsUG9zdHNIZE1vZElkIiwidGhpcyIsInByb3RvdHlwZSIsInJ1biIsInVwZGF0ZUNvbG9waG9uIiwidXBkYXRlUGFnZVRpdGxlIiwidXBkYXRlUmVsYXRlZFBvc3RzSGVhZGluZyIsInVwZGF0ZVBhZ2VMYXlvdXQiLCJfdGhpcyIsImN1c3RvbWl6ZSIsImZyb20iLCJiaW5kIiwidG8iLCJodG1sIiwicmVwbGFjZVNob3J0VGFncyIsImVhY2giLCJfIiwiaWQiLCJhdHRyIiwia2xhc3MiLCJyZXBsYWNlIiwiYWRkQ2xhc3MiLCJzcGxpdCIsImxlbmd0aCIsImNvbnRlbnQiLCJ0YWciLCJqb2luIiwialF1ZXJ5Iiwid3AiLCJqZW50aWxTaG9ydFRhZ3MiLCJqZW50aWxDb2xvcGhvbk1vZElkIiwiamVudGlsUGFnZUxheW91dE1vZElkcyIsImplbnRpbFBhZ2VUaXRsZU1vZElkcyIsImplbnRpbFJlbGF0ZWRQb3N0c0hlYWRpbmdNb2RJZHMiXSwibWFwcGluZ3MiOiJBQUVBLElBQVVBLFFBQVYsU0FBVUEsR0FFTixJQUFBQyxFQUFBLFdBRUksU0FBQUEsRUFDcUJDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEdBTkFDLEtBQUFQLEdBQUFBLEVBQ0FPLEtBQUFOLElBQUFBLEVBQ0FNLEtBQUFMLFdBQUFBLEVBQ0FLLEtBQUFKLGVBQUFBLEVBQ0FJLEtBQUFILGlCQUFBQSxFQUNBRyxLQUFBRixnQkFBQUEsRUFDQUUsS0FBQUQsaUJBQUFBLEVBNEV6QixPQXhFV1AsRUFBQVMsVUFBQUMsSUFBUCxXQUVJRixLQUFLRyxpQkFDTEgsS0FBS0ksa0JBQ0xKLEtBQUtLLDRCQUNMTCxLQUFLTSxvQkFHRGQsRUFBQVMsVUFBQUUsZUFBUixXQUFBLElBQUFJLEVBQUFQLEtBRUlBLEtBQUtOLElBQUljLFVBQ0xSLEtBQUtKLGVBQ0wsU0FBQ2EsR0FDR0EsRUFBS0MsS0FBSyxTQUFDQyxHQUNQSixFQUFLZCxHQUFHLG1CQUNIbUIsS0FBS0wsRUFBS00saUJBQWlCRixTQU14Q25CLEVBQUFTLFVBQUFHLGdCQUFSLFdBQUEsSUFBQUcsRUFBQVAsS0FFSUEsS0FBS1AsR0FBR3FCLEtBQUtkLEtBQUtGLGdCQUFpQixTQUFDaUIsRUFBVUMsR0FDMUNULEVBQUtiLElBQUljLFVBQVVRLEVBQUksU0FBQ1AsR0FDcEJBLEVBQUtDLEtBQUssU0FBQ0MsR0FDUEosRUFBS2QsR0FBRyxlQUFlbUIsS0FBS0wsRUFBS00saUJBQWlCRixXQU0xRG5CLEVBQUFTLFVBQUFJLDBCQUFSLFdBQUEsSUFBQUUsRUFBQVAsS0FFSUEsS0FBS1AsR0FBR3FCLEtBQUtkLEtBQUtELGlCQUFrQixTQUFDZ0IsRUFBV0MsR0FDNUNULEVBQUtiLElBQUljLFVBQVVRLEVBQUksU0FBQ1AsR0FDcEJBLEVBQUtDLEtBQUssU0FBQ0MsR0FDUEosRUFBS2QsR0FBRyxzQ0FBc0NtQixLQUFLRCxVQU0zRG5CLEVBQUFTLFVBQUFLLGlCQUFSLFdBQUEsSUFBQUMsRUFBQVAsS0FFSUEsS0FBS1AsR0FBR3FCLEtBQ0pkLEtBQUtILGlCQUFrQixTQUFDa0IsRUFBV0MsR0FDL0JULEVBQUtiLElBQUljLFVBQVVRLEVBQUksU0FBQ1AsR0FDcEJBLEVBQUtDLEtBQUssU0FBQ0MsR0FDUEosRUFBS2QsR0FBRyxRQUFRd0IsS0FDWixRQUNBLFNBQUNGLEVBQVdHLEdBQ1IsT0FBQUEsRUFBTUMsUUFBUSxxQkFBc0IsTUFDMUNDLFNBQVMsVUFBVVQsRUFBRSxtQkFBbUJBLEVBQ3JDVSxNQUFNLEtBQUtDLGVBTzVCOUIsRUFBQVMsVUFBQVksaUJBQVIsU0FBeUJVLEdBU3JCLE9BUEF2QixLQUFLUCxHQUFHcUIsS0FDSmQsS0FBS0wsV0FDTCxTQUFDNkIsRUFBYUwsR0FDVkksRUFBVUEsRUFBUUYsTUFBTUcsR0FBS0MsS0FBS04sS0FJbkNJLEdBRWYvQixFQXJGQSxHQUFhRCxFQUFBQyxXQUFVQSxFQUYzQixDQUFVRCxTQUFBQSxPQUFNLEtBMEZoQixJQUFJQSxPQUFPQyxXQUNQa0MsT0FDQUMsR0FDQUMsZ0JBQ0FDLG9CQUNBQyx1QkFDQUMsc0JBQ0FDLGlDQUNGOUIiLCJmaWxlIjoiY3VzdG9taXplLXByZXZpZXcubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD0nLi9nbG9iYWwuZC50cycgLz5cblxubmFtZXNwYWNlIEplbnRpbFxue1xuICAgIGV4cG9ydCBjbGFzcyBDdXN0b21pemVyXG4gICAge1xuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IoXG4gICAgICAgICAgICBwcml2YXRlIHJlYWRvbmx5IF9qOiBKUXVlcnlTdGF0aWMsXG4gICAgICAgICAgICBwcml2YXRlIHJlYWRvbmx5IF93cDogV1AsXG4gICAgICAgICAgICBwcml2YXRlIHJlYWRvbmx5IF9zaG9ydFRhZ3M6IG9iamVjdCxcbiAgICAgICAgICAgIHByaXZhdGUgcmVhZG9ubHkgX2NvbG9waG9uTW9kSWQ6IHN0cmluZyxcbiAgICAgICAgICAgIHByaXZhdGUgcmVhZG9ubHkgX3BhZ2VMYXlvdXRNb2RJZDogc3RyaW5nW10sXG4gICAgICAgICAgICBwcml2YXRlIHJlYWRvbmx5IF9wYWdlVGl0bGVNb2RJZDogc3RyaW5nW10sXG4gICAgICAgICAgICBwcml2YXRlIHJlYWRvbmx5IF9yZWxQb3N0c0hkTW9kSWQ6IHN0cmluZ1tdLFxuICAgICAgICApIHtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBydW4oKTogdm9pZFxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUNvbG9waG9uKClcbiAgICAgICAgICAgIHRoaXMudXBkYXRlUGFnZVRpdGxlKClcbiAgICAgICAgICAgIHRoaXMudXBkYXRlUmVsYXRlZFBvc3RzSGVhZGluZygpXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVBhZ2VMYXlvdXQoKVxuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSB1cGRhdGVDb2xvcGhvbigpOiB2b2lkXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX3dwLmN1c3RvbWl6ZShcbiAgICAgICAgICAgICAgICB0aGlzLl9jb2xvcGhvbk1vZElkLFxuICAgICAgICAgICAgICAgIChmcm9tOiAoKSA9PiB2b2lkKTogdm9pZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb20uYmluZCgodG86IHN0cmluZyk6IHZvaWQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5faignI2NvbG9waG9uIHNtYWxsJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuaHRtbCh0aGlzLnJlcGxhY2VTaG9ydFRhZ3ModG8pKVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgdXBkYXRlUGFnZVRpdGxlKCk6IHZvaWRcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fai5lYWNoKHRoaXMuX3BhZ2VUaXRsZU1vZElkLCAoXzpudW1iZXIsIGlkOiBzdHJpbmcpOiB2b2lkID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl93cC5jdXN0b21pemUoaWQsIChmcm9tOiAoKSA9PiB2b2lkKTogdm9pZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb20uYmluZCgodG86IHN0cmluZyk6IHZvaWQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5faignLnBhZ2UtdGl0bGUnKS5odG1sKHRoaXMucmVwbGFjZVNob3J0VGFncyh0bykpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIHVwZGF0ZVJlbGF0ZWRQb3N0c0hlYWRpbmcoKTogdm9pZFxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9qLmVhY2godGhpcy5fcmVsUG9zdHNIZE1vZElkLCAoXzogbnVtYmVyLCBpZDogc3RyaW5nKTogdm9pZCA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fd3AuY3VzdG9taXplKGlkLCAoZnJvbTogKCkgPT4gdm9pZCk6IHZvaWQgPT4ge1xuICAgICAgICAgICAgICAgICAgICBmcm9tLmJpbmQoKHRvOiBzdHJpbmcpOiB2b2lkID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2ooJyNyZWxhdGVkLXBvc3RzLXdyYXAgLnBvc3RzLWhlYWRpbmcnKS5odG1sKHRvKVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSB1cGRhdGVQYWdlTGF5b3V0KCk6IHZvaWRcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fai5lYWNoKFxuICAgICAgICAgICAgICAgIHRoaXMuX3BhZ2VMYXlvdXRNb2RJZCwgKF86IG51bWJlciwgaWQ6IHN0cmluZyk6IHZvaWQgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl93cC5jdXN0b21pemUoaWQsIChmcm9tOiAoKSA9PiB2b2lkKTogdm9pZCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmcm9tLmJpbmQoKHRvOiBzdHJpbmcpOiB2b2lkID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9qKCdib2R5JykuYXR0cihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NsYXNzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKF86IG51bWJlciwga2xhc3M6IHN0cmluZyk6IHN0cmluZyA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2xhc3MucmVwbGFjZSgvKF58XFxzKWxheW91dFxcLVxcUysvZywgJycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKS5hZGRDbGFzcyhgbGF5b3V0LSR7dG99IGxheW91dC1jb2x1bW5zLSR7dG9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNwbGl0KCctJykubGVuZ3RofWApXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgcmVwbGFjZVNob3J0VGFncyhjb250ZW50OiBzdHJpbmcpOiBzdHJpbmdcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fai5lYWNoKFxuICAgICAgICAgICAgICAgIHRoaXMuX3Nob3J0VGFncyxcbiAgICAgICAgICAgICAgICAodGFnOiBzdHJpbmcsIHJlcGxhY2U6IHN0cmluZyk6IHZvaWQgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5zcGxpdCh0YWcpLmpvaW4ocmVwbGFjZSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApXG5cbiAgICAgICAgICAgIHJldHVybiBjb250ZW50XG4gICAgICAgIH1cbiAgICB9XG59XG5cbm5ldyBKZW50aWwuQ3VzdG9taXplcihcbiAgICBqUXVlcnksXG4gICAgd3AsXG4gICAgamVudGlsU2hvcnRUYWdzLFxuICAgIGplbnRpbENvbG9waG9uTW9kSWQsXG4gICAgamVudGlsUGFnZUxheW91dE1vZElkcyxcbiAgICBqZW50aWxQYWdlVGl0bGVNb2RJZHMsXG4gICAgamVudGlsUmVsYXRlZFBvc3RzSGVhZGluZ01vZElkc1xuKS5ydW4oKVxuIl19
